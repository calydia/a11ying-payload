/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    demopages: Demopage;
    glossaryItems: GlossaryItem;
    reqPages: ReqPage;
    principles: Principle;
    guidelines: Guideline;
    criteria: Criterion;
    blogCards: BlogCard;
    users: User;
    media: Media;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    demopages: DemopagesSelect<false> | DemopagesSelect<true>;
    glossaryItems: GlossaryItemsSelect<false> | GlossaryItemsSelect<true>;
    reqPages: ReqPagesSelect<false> | ReqPagesSelect<true>;
    principles: PrinciplesSelect<false> | PrinciplesSelect<true>;
    guidelines: GuidelinesSelect<false> | GuidelinesSelect<true>;
    criteria: CriteriaSelect<false> | CriteriaSelect<true>;
    blogCards: BlogCardsSelect<false> | BlogCardsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    mainNav: MainNav;
    footerNav: FooterNav;
    frontPage: FrontPage;
    ReqNav: ReqNav;
    ReqFooterNav: ReqFooterNav;
    menuTitles: MenuTitle;
    notFound: NotFound;
    ReqFrontPage: ReqFrontPage;
  };
  globalsSelect: {
    mainNav: MainNavSelect<false> | MainNavSelect<true>;
    footerNav: FooterNavSelect<false> | FooterNavSelect<true>;
    frontPage: FrontPageSelect<false> | FrontPageSelect<true>;
    ReqNav: ReqNavSelect<false> | ReqNavSelect<true>;
    ReqFooterNav: ReqFooterNavSelect<false> | ReqFooterNavSelect<true>;
    menuTitles: MenuTitlesSelect<false> | MenuTitlesSelect<true>;
    notFound: NotFoundSelect<false> | NotFoundSelect<true>;
    ReqFrontPage: ReqFrontPageSelect<false> | ReqFrontPageSelect<true>;
  };
  locale: 'en' | 'fi';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title?: string | null;
  slug?: string | null;
  pageUrl?: string | null;
  lead?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  metaDescription: string;
  searchLead?: string | null;
  searchContent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "demopages".
 */
export interface Demopage {
  id: number;
  title?: string | null;
  slug?: string | null;
  pageUrl?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  metaDescription: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "glossaryItems".
 */
export interface GlossaryItem {
  id: number;
  term?: string | null;
  termDescription?: string | null;
  wcagRelated?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reqPages".
 */
export interface ReqPage {
  id: number;
  title?: string | null;
  slug?: string | null;
  pageUrl?: string | null;
  lead?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  metaDescription: string;
  searchLead?: string | null;
  searchContent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "principles".
 */
export interface Principle {
  id: number;
  title?: string | null;
  principleNumber?: string | null;
  slug?: string | null;
  pageUrl?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  metaDescription: string;
  searchContent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guidelines".
 */
export interface Guideline {
  id: number;
  title?: string | null;
  guidelineNumber?: string | null;
  Principle?: (number | null) | Principle;
  slug?: string | null;
  pageUrl?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  metaDescription: string;
  searchContent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "criteria".
 */
export interface Criterion {
  id: number;
  title?: string | null;
  criterionNumber?: string | null;
  criterionLevel?: string | null;
  wcagVersion?: string | null;
  criterionSort?: number | null;
  Principle?: (number | null) | Principle;
  Guideline?: (number | null) | Guideline;
  slug?: string | null;
  pageUrl?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  metaDescription: string;
  cardContent?: string | null;
  searchContent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogCards".
 */
export interface BlogCard {
  id: number;
  title?: string | null;
  url?: string | null;
  date?: string | null;
  image?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'pages';
        value: number | Page;
      }
    | {
        relationTo: 'demopages';
        value: number | Demopage;
      }
    | {
        relationTo: 'reqPages';
        value: number | ReqPage;
      }
    | {
        relationTo: 'principles';
        value: number | Principle;
      }
    | {
        relationTo: 'guidelines';
        value: number | Guideline;
      }
    | {
        relationTo: 'criteria';
        value: number | Criterion;
      };
  searchContent?: string | null;
  searchLead?: string | null;
  searchPageUrl?: string | null;
  searchDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'demopages';
        value: number | Demopage;
      } | null)
    | ({
        relationTo: 'glossaryItems';
        value: number | GlossaryItem;
      } | null)
    | ({
        relationTo: 'reqPages';
        value: number | ReqPage;
      } | null)
    | ({
        relationTo: 'principles';
        value: number | Principle;
      } | null)
    | ({
        relationTo: 'guidelines';
        value: number | Guideline;
      } | null)
    | ({
        relationTo: 'criteria';
        value: number | Criterion;
      } | null)
    | ({
        relationTo: 'blogCards';
        value: number | BlogCard;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  pageUrl?: T;
  lead?: T;
  content?: T;
  metaDescription?: T;
  searchLead?: T;
  searchContent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "demopages_select".
 */
export interface DemopagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  pageUrl?: T;
  content?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "glossaryItems_select".
 */
export interface GlossaryItemsSelect<T extends boolean = true> {
  term?: T;
  termDescription?: T;
  wcagRelated?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reqPages_select".
 */
export interface ReqPagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  pageUrl?: T;
  lead?: T;
  content?: T;
  metaDescription?: T;
  searchLead?: T;
  searchContent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "principles_select".
 */
export interface PrinciplesSelect<T extends boolean = true> {
  title?: T;
  principleNumber?: T;
  slug?: T;
  pageUrl?: T;
  content?: T;
  metaDescription?: T;
  searchContent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guidelines_select".
 */
export interface GuidelinesSelect<T extends boolean = true> {
  title?: T;
  guidelineNumber?: T;
  Principle?: T;
  slug?: T;
  pageUrl?: T;
  content?: T;
  metaDescription?: T;
  searchContent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "criteria_select".
 */
export interface CriteriaSelect<T extends boolean = true> {
  title?: T;
  criterionNumber?: T;
  criterionLevel?: T;
  wcagVersion?: T;
  criterionSort?: T;
  Principle?: T;
  Guideline?: T;
  slug?: T;
  pageUrl?: T;
  content?: T;
  metaDescription?: T;
  cardContent?: T;
  searchContent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogCards_select".
 */
export interface BlogCardsSelect<T extends boolean = true> {
  title?: T;
  url?: T;
  date?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  searchContent?: T;
  searchLead?: T;
  searchPageUrl?: T;
  searchDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mainNav".
 */
export interface MainNav {
  id: number;
  firstLevel: {
    element?: ('button' | 'link') | null;
    mainPath: string;
    button?: string | null;
    iconClass?: string | null;
    menuLink?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'demopages';
          value: number | Demopage;
        } | null);
    secondLevel?:
      | {
          element?: ('button' | 'link') | null;
          button?: string | null;
          menuPath?: string | null;
          iconClass?: string | null;
          menuLink?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'demopages';
                value: number | Demopage;
              } | null);
          thirdLevel?:
            | {
                element?: ('button' | 'link') | null;
                button?: string | null;
                iconClass?: string | null;
                menuLink?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'demopages';
                      value: number | Demopage;
                    } | null);
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footerNav".
 */
export interface FooterNav {
  id: number;
  navigationLinks: {
    iconClass?: string | null;
    menuLink?: (number | null) | Page;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "frontPage".
 */
export interface FrontPage {
  id: number;
  title: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  metaDescription: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReqNav".
 */
export interface ReqNav {
  id: number;
  firstLevel: {
    element?: ('button' | 'link') | null;
    mainPath?: string | null;
    button?: string | null;
    iconClass?: string | null;
    menuLink?:
      | ({
          relationTo: 'reqPages';
          value: number | ReqPage;
        } | null)
      | ({
          relationTo: 'principles';
          value: number | Principle;
        } | null)
      | ({
          relationTo: 'guidelines';
          value: number | Guideline;
        } | null)
      | ({
          relationTo: 'criteria';
          value: number | Criterion;
        } | null);
    secondLevel?:
      | {
          element?: ('button' | 'link') | null;
          button?: string | null;
          menuPath?: string | null;
          iconClass?: string | null;
          menuLink?:
            | ({
                relationTo: 'reqPages';
                value: number | ReqPage;
              } | null)
            | ({
                relationTo: 'principles';
                value: number | Principle;
              } | null)
            | ({
                relationTo: 'guidelines';
                value: number | Guideline;
              } | null)
            | ({
                relationTo: 'criteria';
                value: number | Criterion;
              } | null);
          thirdLevel?:
            | {
                element?: ('button' | 'link') | null;
                button?: string | null;
                iconClass?: string | null;
                menuLink?:
                  | ({
                      relationTo: 'reqPages';
                      value: number | ReqPage;
                    } | null)
                  | ({
                      relationTo: 'principles';
                      value: number | Principle;
                    } | null)
                  | ({
                      relationTo: 'guidelines';
                      value: number | Guideline;
                    } | null)
                  | ({
                      relationTo: 'criteria';
                      value: number | Criterion;
                    } | null);
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReqFooterNav".
 */
export interface ReqFooterNav {
  id: number;
  navigationLinks: {
    iconClass?: string | null;
    menuLink?: (number | null) | ReqPage;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menuTitles".
 */
export interface MenuTitle {
  id: number;
  list:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notFound".
 */
export interface NotFound {
  id: number;
  title: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReqFrontPage".
 */
export interface ReqFrontPage {
  id: number;
  title: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  metaDescription: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mainNav_select".
 */
export interface MainNavSelect<T extends boolean = true> {
  firstLevel?:
    | T
    | {
        element?: T;
        mainPath?: T;
        button?: T;
        iconClass?: T;
        menuLink?: T;
        secondLevel?:
          | T
          | {
              element?: T;
              button?: T;
              menuPath?: T;
              iconClass?: T;
              menuLink?: T;
              thirdLevel?:
                | T
                | {
                    element?: T;
                    button?: T;
                    iconClass?: T;
                    menuLink?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footerNav_select".
 */
export interface FooterNavSelect<T extends boolean = true> {
  navigationLinks?:
    | T
    | {
        iconClass?: T;
        menuLink?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "frontPage_select".
 */
export interface FrontPageSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReqNav_select".
 */
export interface ReqNavSelect<T extends boolean = true> {
  firstLevel?:
    | T
    | {
        element?: T;
        mainPath?: T;
        button?: T;
        iconClass?: T;
        menuLink?: T;
        secondLevel?:
          | T
          | {
              element?: T;
              button?: T;
              menuPath?: T;
              iconClass?: T;
              menuLink?: T;
              thirdLevel?:
                | T
                | {
                    element?: T;
                    button?: T;
                    iconClass?: T;
                    menuLink?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReqFooterNav_select".
 */
export interface ReqFooterNavSelect<T extends boolean = true> {
  navigationLinks?:
    | T
    | {
        iconClass?: T;
        menuLink?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menuTitles_select".
 */
export interface MenuTitlesSelect<T extends boolean = true> {
  list?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notFound_select".
 */
export interface NotFoundSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReqFrontPage_select".
 */
export interface ReqFrontPageSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}